/***************************************************************************************
Copyright (C), 2011,  Co.Hengjun, Ltd.
文件名:  utility_function.c
作者:    CY
版本 :   1.0	
创建日期:2011/12/1
用途:    系统常用工具函数
历史修改记录:         
***************************************************************************************/
#ifndef UTILITY_FUNCTION
#define UTILITY_FUNCTION

#include "util/ci_header.h"
#include "util/utility.h"
#include "platform/platform_api.h"

#include "base_type_definition.h"

#define  PROTECTIVE_SWITCH(state) (0xAA == (((state)>>8)&0xFF))
#define  FOLLOW_SWITCH(state) (0x55 == (((state)>>8)&0xFF))
#define  SWITCH_NORMAL(state) (((state) & 0xFF) == 0x55)


#define GATEWAY(address) (((address)>>8)&0xFF)
#define EEU(address) (((address)>>2)&0x3F)
#define NODE(address) ((address)&0x03)
extern char_t * route_state_name[];

#define  sr_state(route_index,state) CIHmi_SendDebugTips("%s :  %s :  %s :  %d",gr_name(route_index),route_state_name[state],__FUNCTION__,__LINE__); sr_state_fun(route_index,state);

/****************************************************
函数名:    strcmmp_no_case
功能描述:  不区分大小写的字符串比较
返回值:    
参数:      str1
参数:      str2

作者  :    CY
日期  ：   2012/1/11
****************************************************/
int16_t strcmp_no_case(const char_t * str1, const char_t * str2);

/****************************************************
函数名:    strcpy_check
功能描述:  按照规定的长度复制字符串
返回值:    
参数:      str1
参数:      str2
参数:      len

作者  :    CY
日期  ：   2012/1/11
****************************************************/
char_t * strcpy_check(char_t * str1,char_t * str2, size_t len);

/****************************************************
函数名:    strcat_check
功能描述:  带长度检查的字符串拼接
返回值:    
参数:      str1
参数:      str2
参数:      len

作者  :    CY
日期  ：   2012/1/11
****************************************************/
char_t * strcat_check(char_t * str1,char_t * str2, size_t len);

/****************************************************
函数名:    strlen_check
功能描述:  求字符串长度
返回值:    
参数:      str

作者  :    CY
日期  ：   2012/1/13
****************************************************/
size_t strlen_check(char_t * str);

/****************************************************
函数名:    input_addrees_to_node
功能描述:  从输入地址找出对应的信号节点索引号
返回值:    信号节点索引号
参数:      address 输入地址
作者  :    CY
日期  ：   2011/12/1
****************************************************/
int16_t input_addrees_to_node(uint16_t address);

void input_node_state(uint8_t GA,uint8_t EA,uint32_t state);
/****************************************************
函数名:    set_command
功能描述:  设置信号点所在的电子单元的发送命令
返回值:    信号节点索引号
参数:      node_index
作者  :    CY
日期  ：   2012/1/9
****************************************************/
void set_command(int16_t node_index,uint32_t cmd);
/****************************************************
函数名：   clear_switch_command
功能描述： 清除命令
返回值：   void
参数：     int16_t node_index
作者：	   hejh
日期：     2014/04/17
****************************************************/
void clear_switch_command(int16_t node_index);
/****************************************************
函数名:    get_command
功能描述:  获取信号点所在的电子单元的发送命令
返回值:    信号节点索引号
参数:      node_index
作者  :    CY
日期  ：   2012/1/9
****************************************************/
uint32_t get_command(int16_t node_index);
/****************************************************
函数名:    ILT_to_route
功能描述:  将联锁表索引号转换为进路号
返回值:    
参数:      ILT_index

作者  :    CY
日期  ：   2012/1/9
****************************************************/
int16_t ILT_to_route(int16_t ILT_index);
/****************************************************
函数名:    gr_name
功能描述:  获取进路名称
返回值:    
参数:      route_index

作者  :    CY
日期  ：   2012/1/5
****************************************************/
char_t * gr_name(route_t route_index);
/****************************************************
函数名:    gn_name
功能描述:  信号点名称
返回值:    
参数:      node_index

作者  :    CY
日期  ：   2012/1/5
****************************************************/
char_t * gn_name(int16_t node_index);

/****************************************************
函数名:    is_successive_route
功能描述:  是否为延续进路
返回值:    
参数:      index_t ILT_index
作者  :    CY
日期  ：   2012/3/21
****************************************************/
CI_BOOL is_successive_ILT(index_t ILT_index);

/****************************************************
函数名:    is_successive_route
功能描述:  是否为延续进路
返回值:    
参数:      index_t route_index
作者  :    CY
日期  ：   2012/3/22
****************************************************/
CI_BOOL is_successive_route(route_t route_index);

/****************************************************
函数名:    is_successive_button
功能描述:  延续进路按钮是否正确
返回值:    
参数:      index_t ILT_index
作者  :    CY
日期  ：   2012/3/22
****************************************************/
CI_BOOL is_successive_button(index_t ILT_index);


/****************************************************
函数名:    sn_signal_state
功能描述:  设置信号机状态
返回值:    
参数:      int16_t node_index
参数:      EN_signal_state ss
作者  :    CY
日期  ：   2012/3/21
****************************************************/
void sn_signal_state( int16_t node_index, EN_signal_state ss );
/****************************************************
函数名:    sn_signal_expect_state
功能描述:  设置信号机预期的状态
返回值:    
参数:      node_index
参数:      ss

作者  :    hjh
日期  ：   2012/3/7
****************************************************/
void sn_signal_expect_state( int16_t node_index, EN_signal_state ss );

/****************************************************
函数名:    open_signal_command
功能描述:  设置信号开放命令
返回值:    
参数:      index
参数:      command
作者  :    CY
日期  ：   2011/12/12
****************************************************/
void send_signal_command(int16_t node_index,uint32_t command);

/****************************************************
函数名:    send_switch_command
功能描述:  发送道岔控制命令
返回值:    
参数:      node_index
参数:      command

作者  :    CY
日期  ：   2012/1/6
****************************************************/
void send_switch_command(int16_t node_index,uint32_t command);

/****************************************************
函数名:    button_to_node
功能描述:  返回按钮所属的信号节点的索引号
返回值:    
参数:      button 按钮索引号
作者  :    CY
日期  ：   2011/12/5
****************************************************/
int16_t gb_node(int16_t button_index);

/****************************************************
函数名:    gb_type
功能描述:  获取按钮类型
返回值:    
参数:      button_index
作者  :    CY
日期  ：   2011/12/20
****************************************************/
EN_button_type gb_type(int16_t button_index);


/****************************************************
函数名:    clear_state_changed
功能描述:  清除状态变化的标志
返回值:    

作者  :    CY
日期  ：   2012/1/11
****************************************************/
void clear_state_changed(int16_t node_index);

/****************************************************
函数名:    reset_node
功能描述:  重置节点数据，删除旧数据
返回值:    

作者  :    CY
日期  ：   2011/12/20
****************************************************/
void reset_node(int16_t node_index);

/****************************************************
函数名:    is_signal
功能描述:  是否为信号机节点
返回值:    
参数:      node_index
作者  :    CY
日期  ：   2011/12/19
****************************************************/
CI_BOOL is_signal(int16_t node_index);
/****************************************************
函数名:    is_switch
功能描述:  是否为道岔节点
返回值:    
参数:      node_index
作者  :    CY
日期  ：   2011/12/19
****************************************************/
CI_BOOL is_switch(int16_t node_index);
/****************************************************
函数名:    is_section
功能描述:  节点是否为区段
返回值:    
参数:      node_index
作者  :    CY
日期  ：   2011/12/19
****************************************************/
CI_BOOL is_section(int16_t node_index);
/****************************************************
函数名:    gn_direction
功能描述:  获取信号点方向
返回值:    
参数:      node_index
作者  :    CY
日期  ：   2011/12/14
****************************************************/
EN_node_direction gn_direction(int16_t node_index);
/****************************************************
函数名:    gn_belong_route
功能描述:  获取信号节点所在的进路索引
返回值:    在进路中则返回进路索引号，无则返回NO_INDEX
参数:      node_index
作者  :    WSP
日期  ：   2011/12/14
****************************************************/
route_t gn_belong_route(int16_t node_index);

/****************************************************
函数名:    sn_belong_route
功能描述:  设置信号节点所属进路
返回值:    
参数:      node_index
参数:      route_index
作者  :    CY
日期  ：   2011/12/16
****************************************************/
void sn_belong_route( int16_t node_index, route_t route_index ) ;

/****************************************************
函数名:    get_node_type
功能描述:  获取信号点类型
返回值:    
参数:      index
作者  :    CY
日期  ：   2011/12/12
****************************************************/
EN_node_type gn_type(int16_t node_index);

/****************************************************
函数名:    get_previous_node
功能描述:  获取前一个节点
返回值:    
参数:      index
作者  :    CY
日期  ：   2011/12/12
****************************************************/
int16_t gn_previous(int16_t node_index);

/****************************************************
函数名:    gn_backword
功能描述:  按照方向，获取当前节点后方的节点
返回值:    
参数:      index
作者  :    CY
日期  ：   2011/12/12
****************************************************/
int16_t gn_backword(EN_node_direction dir, int16_t node_index);

/****************************************************
函数名:    get_next_node
功能描述:  获取下一个节点
返回值:    
参数:      index
作者  :    CY
日期  ：   2011/12/12
****************************************************/
int16_t gn_next(int16_t node_index);

/****************************************************
函数名:    gn_forword
功能描述:  按照方向，获取当前节点前方的节点
返回值:    
参数:      index
作者  :    CY
日期  ：   2011/12/12
****************************************************/
int16_t gn_forword(EN_node_direction dir, int16_t node_index);

/****************************************************
函数名:    get_other_node
功能描述:  获取道岔的另外一个节点
返回值:    
参数:      index
作者  :    CY
日期  ：   2011/12/12
****************************************************/
int16_t gn_reverse(int16_t node_index);
/****************************************************
函数名:    gn_forword
功能描述:  按照方向，获取道岔的反位节点
返回值:    
参数:      index
作者  :    CY
日期  ：   2011/12/12
****************************************************/
int16_t gn_reverse_dir(EN_node_direction dir, int16_t node_index);

/****************************************************
函数名:    is_node_locked
功能描述:  获取节点锁闭状态
返回值:    
参数:      index
作者  :    CY
日期  ：   2011/12/12
****************************************************/
CI_BOOL is_node_locked( int16_t node_index, uint32_t state );

/****************************************************
函数名:    sn_lock_state
功能描述:  设置信号点锁闭状态
返回值:    
参数:      node_index
作者  :    CY
日期  ：   2011/12/26
****************************************************/
void sn_lock_state(int16_t node_index, EN_lock_type lt);

/****************************************************
函数名:    sn_unlock
功能描述:  解锁信号点
返回值:    
参数:      node_index
作者  :    CY
日期  ：   2011/12/26
****************************************************/
void sn_unlock(int16_t node_index);

/****************************************************
函数名:    get_used_state
功能描述:  获取节点征用状态
返回值:    
参数:      index
作者  :    CY
日期  ：   2011/12/12
****************************************************/
CI_BOOL gn_used_state(int16_t node_index);

/****************************************************
函数名:    sn_used_flag
功能描述:  设置征用标志
返回值:    
参数:      node_index
作者  :    WSP
日期  ：   2011/12/13
****************************************************/
void sn_used_state(int16_t node_index, CI_BOOL state);

/****************************************************
函数名:    sn_start_timer
功能描述:  节点开始计时
返回值:    
参数:      node_index

作者  :    hjh
日期  ：   2012/3/22
****************************************************/
void sn_start_timer(int16_t node_index,CI_TIMER interval,EN_delay_time_type time_type);

/****************************************************
函数名:    sn_stop_timer
功能描述:  节点停止计时
返回值:    
参数:      node_index

作者  :    hjh
日期  ：   2012/3/22
****************************************************/
void sn_stop_timer(int16_t node_index);

/****************************************************
函数名:    is_node_timer_run
功能描述:  节点计时器是否在计时
返回值:    
参数:      node_index

作者  :    hjh
日期  ：   2012/3/22
****************************************************/
CI_BOOL is_node_timer_run(int16_t node_index);

/****************************************************
函数名:    is_node_complete_timer
功能描述:  节点计时是否已完成
返回值:    
参数:      node_index

作者  :    hjh
日期  ：   2012/3/22
****************************************************/
CI_BOOL is_node_complete_timer(int16_t node_index);

/****************************************************
函数名:    get_buttons
功能描述:  获取信号点相关的按钮
返回值:    
参数:      index  信号点索引号
           button_index  信号点上的按钮编号
作者  :    CY
日期  ：   2011/12/12
****************************************************/
int16_t gn_buttons(int16_t node_index, int16_t button_index);

/****************************************************
函数名:    get_another_switch
功能描述:  获取双动道岔的另一动
返回值:    返回NO_INDEX说明时单动道岔
参数:      index
作者  :    CY
日期  ：   2011/12/12
****************************************************/
int16_t gn_another_switch(int16_t node_index);

/****************************************************
函数名:    gn_another_signal
功能描述:  获取和本并置或差置信号机关联的另一架信号机
返回值:    
参数:      node_index
作者  :    CY
日期  ：   2011/12/26
****************************************************/
int16_t gn_another_signal(int16_t node_index);

/****************************************************
函数名:    gn_name
功能描述:  信号点名称
返回值:    
参数:      node_index

作者  :    CY
日期  ：   2012/1/5
****************************************************/
char_t * gn_name(int16_t node_index);

/****************************************************
函数名:    sn_switch_location
功能描述:  设置当前道岔的位置
返回值:    
参数:      
作者  :    CY
日期  ：   2011/12/12
****************************************************/
void sn_switch_location(int16_t node_index, EN_switch_state location);
/****************************************************
函数名:    get_section_from_switch
功能描述:  从道岔获取道岔所在的道岔区段
返回值:    
参数:      index
作者  :    CY
日期  ：   2011/12/12
****************************************************/
int16_t gn_switch_section(int16_t node_index);

/****************************************************
函数名:    gn_section_switch
功能描述:  获取道岔区段中的道岔
返回值:    
参数:      node_index
作者  :    CY
日期  ：   2011/12/20
****************************************************/
int16_t gn_section_switch(int16_t node_index,int16_t ordinal);
/****************************************************
函数名:    get_section_state
功能描述:  获取轨道占用状态
返回值:    
参数:      index
作者  :    CY
日期  ：   2011/12/12
****************************************************/
EN_section_state gn_section_state(int16_t node_index);

/****************************************************
函数名:    get_signal_state
功能描述:  获取信号机显示状态
返回值:    
参数:      index
作者  :    CY
日期  ：   2011/12/12
****************************************************/
EN_signal_state gn_signal_state(int16_t node_index);

/****************************************************
函数名:    get_switch_state
功能描述:  获取道岔状态
返回值:    
参数:      index
作者  :    CY
日期  ：   2011/12/12
****************************************************/
EN_switch_state gn_switch_state(int16_t node_index);

/****************************************************
函数名:    get_node_throat
功能描述:  获取信号点所属咽喉
返回值:    
参数:      node_index
作者  :    CY
日期  ：   2011/12/13
****************************************************/
uint8_t gn_throat(int16_t node_index);

/****************************************************
函数名:    gn_approach_section
功能描述:  获取进站信号机外方的接近区段
返回值:    
参数:      entry_signal
作者  :    CY
日期  ：   2011/12/13
****************************************************/
node_t gn_approach_section(node_t entry_signal,index_t section);



/****************************************************
函数名:    reset_route
功能描述:  重置进路数据，删除旧数据
返回值:    

作者  :    CY
日期  ：   2011/12/20
****************************************************/
void reset_route(route_t route_index);

/****************************************************
函数名:    delete_route
功能描述:  删除进路
返回值:    

作者  :    CY
日期  ：   2011/12/20
****************************************************/
void delete_route(route_t route_index);

/****************************************************
函数名:    ILT_to_route
功能描述:  将联锁表索引号转换为进路号
返回值:    
参数:      ILT_index

作者  :    CY
日期  ：   2012/1/9
****************************************************/
int16_t ILT_to_route(int16_t ILT_index);
/****************************************************
函数名:    gr_name
功能描述:  获取进路名称
返回值:    
参数:      route_index

作者  :    CY
日期  ：   2012/1/5
****************************************************/
char_t * gr_name(route_t route_index);
/****************************************************
函数名:    sr_start_timer
功能描述:  开始计时
返回值:    
参数:      route_index
作者  :    CY
日期  ：   2011/12/28
****************************************************/
void sr_start_timer(route_t route_index,CI_TIMER interval,EN_delay_time_type time_type);

/****************************************************
函数名:    sr_stop_timer
功能描述:  停止计时
返回值:    
参数:      route_index
作者  :    CY
日期  ：   2011/12/28
****************************************************/
void sr_stop_timer(route_t route_index);

/****************************************************
函数名:    is_timer_run
功能描述:  计时器是否正在计时
返回值:    
参数:      route_index
作者  :    CY
日期  ：   2011/12/28
****************************************************/
CI_BOOL is_timer_run(route_t route_index);

/****************************************************
函数名:    is_complete_timer
功能描述:  是否完成计时
返回值:    
参数:      route_index
作者  :    CY
日期  ：   2011/12/28
****************************************************/
CI_BOOL is_complete_timer(route_t route_index );

/****************************************************
函数名:    gn_state_changed
功能描述:  区段状态是否发生变化
返回值:    
参数:      route_index
作者  :    CY
日期  ：   2011/12/26
****************************************************/
CI_BOOL gn_state_changed(int16_t node_index);
/****************************************************
函数名:    gn_signal_expect_state
功能描述:  获取信号节点的预期状态
返回值:    
参数:      node_index

作者  :    hjh
日期  ：   2012/3/7
****************************************************/
EN_signal_state gn_signal_expect_state(int16_t node_index);
/****************************************************
函数名:    sr_increament_error_count
功能描述:  增加进路错误计数
返回值:    
参数:      route_index
作者  :    CY
日期  ：   2011/12/20
****************************************************/
void sr_increament_error_count(route_t route_index);
/****************************************************
函数名:    sr_clear_error_count
功能描述:  清除进路错误计数
返回值:    
参数:      route_index
作者  :    CY
日期  ：   2011/12/20
****************************************************/
void sr_clear_error_count(route_t route_index);
/****************************************************
函数名:    gr_error_count
功能描述:  获取进路当前的错误计数
返回值:    
参数:      route_index
作者  :    CY
日期  ：   2011/12/20
****************************************************/
int16_t gr_error_count(route_t route_index);

/****************************************************
函数名:    get_route_type
功能描述:  获取进路类型
返回值:    
参数:      index
作者  :    CY
日期  ：   2011/12/12
****************************************************/
EN_route_type gr_type(route_t route_index);

/****************************************************
函数名:    get_route_state
功能描述:  获取进路状态
返回值:    
参数:      index
作者  :    CY
日期  ：   2011/12/12
****************************************************/
EN_route_state gr_state(route_t route_index);

/****************************************************
函数名:    set_route_state
功能描述:  设置进路状态
返回值:    
参数:      index
参数:      state
作者  :    CY
日期  ：   2011/12/12
****************************************************/
void sr_state_fun(route_t route_index,EN_route_state state);

/****************************************************
函数名:    get_route_start_signal
功能描述:  获取始端信号
返回值:    
参数:      index
作者  :    CY
日期  ：   2011/12/12
****************************************************/
int16_t gr_start_signal(route_t route_index);

/****************************************************
函数名:    get_route_start_signal_show
功能描述:  获取进路始端信号机的显示
返回值:    
参数:      index
作者  :    CY
日期  ：   2011/12/13
****************************************************/
uint16_t gr_start_signal_show(route_t route_index);

/****************************************************
函数名:    get_forward_route
功能描述:  获取前方进路
返回值:    
参数:      index
作者  :    CY
日期  ：   2011/12/12
****************************************************/
route_t gr_forward(route_t route_index);

/****************************************************
函数名:    sr_forward
功能描述:  设置本进路的前方进路
返回值:    
参数:      route_index
参数:      forward_route
作者  :    CY
日期  ：   2011/12/16
****************************************************/
void sr_forward(route_t route_index,route_t forward_route);

/****************************************************
函数名:    get_backward_route
功能描述:  获取本进路后方进路
返回值:    
参数:      index
作者  :    CY
日期  ：   2011/12/12
****************************************************/
route_t gr_backward(route_t route_index);

/****************************************************
函数名:    sr_backward
功能描述:  设置本进路的后方进路
返回值:    
参数:      route_index
参数:      forward_route
作者  :    CY
日期  ：   2011/12/16
****************************************************/
void sr_backward(route_t route_index, route_t backward_route);


/****************************************************
函数名:    is_exist_route
功能描述:  检查是否存在该进路
返回值:    
参数:      route_index
作者  :    CY
日期  ：   2011/12/13
****************************************************/
CI_BOOL is_route_exist(route_t route_index);

/****************************************************
函数名:    get_route_nodes_count
功能描述:  获取进路中的信号点总数
返回值:    
参数:      route_index
作者  :    CY
日期  ：   2011/12/13
****************************************************/
int16_t gr_nodes_count(route_t route_index);

/****************************************************
函数名:    get_route_node
功能描述:  获取进路中的某个信号节点
返回值:    
参数:      route_index  进路索引号
参数:      node_ordinal  进路中的信号点序号
作者  :    CY
日期  ：   2011/12/13
****************************************************/
int16_t gr_node(route_t route_index, int16_t node_ordinal);

/****************************************************
函数名:    get_route_switches_count
功能描述:  获取进路中的道岔总数
返回值:    
参数:      route_index
作者  :    CY
日期  ：   2011/12/13
****************************************************/
int16_t gr_switches_count(route_t route_index);

/****************************************************
函数名:    get_route_switch
功能描述:  获取进路中的某个道岔
返回值:    
参数:      route_index
参数:      switch_ordinal
作者  :    CY
日期  ：   2011/12/13
****************************************************/
int16_t gr_switch(route_t route_index, int16_t switch_ordinal);

/****************************************************
函数名:    is_follow_switch
功能描述:  检查道岔是否为带动道岔
返回值:    
参数:      state 道岔描述
作者  :    CY
日期  ：   2011/12/7
****************************************************/
CI_BOOL is_follow_switch(route_t route_index, int16_t switch_ordinal);

/****************************************************
函数名:    is_protective_switch
功能描述:  检查道岔是否为防护道岔
返回值:    
参数:      state 道岔描述
作者  :    CY
日期  ：   2011/12/7
****************************************************/
CI_BOOL is_protective_switch(route_t route_index, int16_t switch_ordinal);

/****************************************************
函数名:    is_ILT_protective_switch
功能描述:  检查道岔是否为防护道岔
返回值:    
参数:      state 道岔描述
作者  :    CY
日期  ：   2011/12/7
****************************************************/
CI_BOOL is_ILT_protective_switch(int16_t ILT_index, int16_t switch_ordinal);

/****************************************************
函数名:    is_switch_in_route
功能描述:  判断道岔是否在进路中
返回值:    
参数:      route_index
参数:      node_index
作者  :    CY
日期  ：   2011/12/13
****************************************************/
CI_BOOL is_switch_in_route(route_t route_index, int16_t node_index);

/****************************************************
函数名:    gr_switch_location
功能描述:  获取进路中某个道岔要求的位置
返回值:    
参数:      route_index
参数:      switch_ordinal
作者  :    CY
日期  ：   2011/12/13
****************************************************/
EN_switch_state gr_switch_location(route_t route_index,int16_t switch_ordinal);

/****************************************************
函数名:    get_route_signals_count
功能描述:  获取进路中信号节点总数
返回值:    
参数:      route_index
作者  :    CY
日期  ：   2011/12/13
****************************************************/
int16_t gr_conflict_signals_count(route_t route_index);

/****************************************************
函数名:    get_route_signal
功能描述:  获取本进路的某个敌对信号
返回值:    
参数:      route_index
参数:      signal_ordinal
作者  :    CY
日期  ：   2011/12/13
****************************************************/
int16_t gr_conflict_signal(route_t route_index, int16_t signal_ordinal);

/****************************************************
函数名:    gr_conflict_signal_condition
功能描述:  是否为条件敌对的信号
返回值:    
参数:      route_index
参数:      signal_ordinal
作者  :    CY
日期  ：   2011/12/13
****************************************************/
CI_BOOL gr_conflict_signal_condition(route_t route_index, int16_t signal_ordinal);

/****************************************************
函数名:    gr_conflic_signal_switch
功能描述:  条件敌对信号检查的道岔索引号
返回值:    
参数:      route_index
参数:      signal_ordinal
作者  :    CY
日期  ：   2011/12/13
****************************************************/
int16_t gr_conflict_signal_switch(route_t route_index,int16_t signal_ordinal);

/****************************************************
函数名:    gr_conflic_signal_switch_location
功能描述:  条件敌对信号要求检查的道岔位置
返回值:    
参数:      route_index
参数:      signal_ordinal
作者  :    CY
日期  ：   2011/12/13
****************************************************/
EN_switch_state gr_conflict_signal_switch_location(route_t route_index,int16_t signal_ordinal);

/****************************************************
函数名:    gr_conflict_signal_type
功能描述:  条件敌对信号的类型
返回值:    
参数:      route_index
参数:      signal_ordinal
作者  :    CY
日期  ：   2011/12/13
****************************************************/
EN_conflict_signal_type gr_conflict_signal_type(route_t route_index,int16_t signal_ordinal);

/****************************************************
函数名:    get_route_sections_count
功能描述:  获取进路中区段总数
返回值:    
参数:      route_index
作者  :    CY
日期  ：   2011/12/13
****************************************************/
int16_t gr_sections_count(route_t route_index);

/****************************************************
函数名:    get_route_section
功能描述:  获取进路中的某个区段
返回值:    
参数:      route_index
参数:      section_ordinal
作者  :    CY
日期  ：   2011/12/13
****************************************************/
int16_t gr_section(route_t route_index,int16_t section_ordinal);

/****************************************************
函数名:    gr_next_section
功能描述:  获取该进路中以当前节点开始的下一个区段
返回值:    
参数:      route_index
参数:      node_ordinal
作者  :    CY
日期  ：   2011/12/20
****************************************************/
int16_t gr_forward_section(route_t route_index,int16_t node_ordinal);

/****************************************************
函数名:    gr_previous_section
功能描述:  获取前一个区段
返回值:    
参数:      route_index
参数:      node_ordinal
作者  :    CY
日期  ：   2011/12/26
****************************************************/
int16_t gr_backward_section(route_t route_index,int16_t node_ordinal);
/****************************************************
函数名:    gr_section_condition
功能描述:  判断进路中的区段是否为有条件的检查
返回值:    
参数:      route_index
参数:      section_ordinal
作者  :    CY
日期  ：   2011/12/13
****************************************************/
CI_BOOL gr_section_condition(route_t route_index,int16_t section_ordinal);

/****************************************************
函数名:    gr_section_switch
功能描述:  获取进路中区段检查条件的道岔索引号
返回值:    
参数:      route_index
参数:      section_ordinal
作者  :    CY
日期  ：   2011/12/13
****************************************************/
int16_t gr_section_condition_switch(route_t route_index,int16_t section_ordinal);

/****************************************************
函数名:    gr_section_switch_location
功能描述:  获取进路中有条件检查区段要求检查的道岔位置
返回值:    
参数:      route_index
参数:      section_ordinal
作者  :    CY
日期  ：   2011/12/13
****************************************************/
EN_switch_state gr_section_condition_switch_location(route_t route_index, int16_t section_ordinal);

/****************************************************
函数名:    gr_start_button
功能描述:  获取进路始端按钮
返回值:    
参数:      route_index
作者  :    CY
日期  ：   2011/12/13
****************************************************/
int16_t gr_start_button(route_t route_index);

/****************************************************
函数名:    gr_change_button
功能描述:  获取进路的第一个变更按钮
返回值:    
参数:      route_index
作者  :    CY
日期  ：   2011/12/13
****************************************************/
int16_t gr_change_button(route_t route_index);

/****************************************************
函数名:    gr_change_button1
功能描述:  获取进路的第二个变更按钮
返回值:    
参数:      route_index
作者  :    CY
日期  ：   2011/12/13
****************************************************/
int16_t gr_change_button1(route_t route_index);

/****************************************************
函数名:    gr_end_button
功能描述:  获取进路终端按钮
返回值:    
参数:      route_index
作者  :    CY
日期  ：   2011/12/13
****************************************************/
int16_t gr_end_button(route_t route_index);

/****************************************************
函数名:    gr_direction
功能描述:  获取进路方向
返回值:    
参数:      route_index
作者  :    CY
日期  ：   2011/12/13
****************************************************/
EN_route_direction gr_direction(route_t route_index);

/****************************************************
函数名:    gr_face_train_signal
功能描述:  获取进路的迎面列车敌对信号
返回值:    
参数:      route_index
作者  :    CY
日期  ：   2011/12/13
****************************************************/
int16_t gr_face_train_signal(route_t route_index);

/****************************************************
函数名:    gr_face_shunting_signal
功能描述:  获取迎面调车敌对
返回值:    
参数:      route_index
作者  :    CY
日期  ：   2011/12/13
****************************************************/
int16_t gr_face_shunting_signal(route_t route_index);

/****************************************************
函数名:    gr_indicator
功能描述:  获取进路始端的表示器
返回值:    
参数:      route_index
作者  :    CY
日期  ：   2011/12/13
****************************************************/
int16_t gr_indicator(route_t route_index);

/****************************************************
函数名:    sn_locked_state
功能描述:  设置信号点的锁闭标志
返回值:    
参数:      node_index
作者  :    WSP
日期  ：   2011/12/14
****************************************************/
void sn_locked_state(int16_t node_index, EN_lock_type state);

/****************************************************
函数名:    is_approach_cleared
功能描述:  接近区段空闲检查
返回值:    空闲返回真，反之返回假
参数:      route_index
			special_flag:检查特殊联锁标志
作者  :    WSP
日期  ：   2011/12/15
****************************************************/
CI_BOOL is_approach_cleared(route_t route_index, CI_BOOL special_flag);

/****************************************************
函数名:    is_branch_line
功能描述:  判断是否为侧线进路
返回值:    
参数:      route_index
作者  :    WSP
日期  ：   2011/12/15
****************************************************/
CI_BOOL is_branch_line(route_t route_index);

/****************************************************
函数名:    is_over_running_signal
功能描述:  车辆冒进信号判断
返回值:    冒进返回真，反之返回假
参数:      route_index
作者  :    WSP
日期  ：   2011/12/15
****************************************************/
CI_BOOL is_over_running_signal(route_t route_index);


/****************************************************
函数名:    gr_first_section
功能描述:  获取进路信号内方第一区段索引
返回值:    存在返回区段索引，反之返回NO_INDEX
参数:      route_index
作者  :    WSP
日期  ：   2011/12/15
****************************************************/
int16_t gr_first_section(route_t route_index);

/****************************************************
函数名:    gr_node_index_route
功能描述:  获取信号点在进路中的索引号
返回值:    
参数:      route_index
参数:      node_index
作者  :    CY
日期  ：   2011/12/19
****************************************************/
int16_t gr_node_index_route(route_t route_index,int16_t node_index);

/****************************************************
函数名:    gr_approach
功能描述:  获取进路的接近区段
返回值:    
参数:      route_index
作者  :    CY
日期  ：   2011/12/26
****************************************************/
int16_t gr_approach(route_t route_index);

/****************************************************
函数名:    sr_updata_cycle
功能描述:  更新记录当前处理周期
返回值:    
参数:      route_index
作者  :    CY
日期  ：   2012/3/20
****************************************************/
void sr_updata_cycle(route_t route_index);

/****************************************************
函数名:    is_route_cycle_right
功能描述:  判断进路周期是否正确
返回值:    
参数:      route_index
作者  :    CY
日期  ：   2012/3/20
****************************************************/
CI_BOOL is_route_cycle_right(route_t route_index);

/****************************************************
函数名:    
功能描述:  获得特殊联锁索引号
返回值:    
参数:      node_index
作者  :    hjh
日期  ：   2011/12/27
****************************************************/
int16_t gn_special_interlocking(int16_t node_index);

/****************************************************
函数名:    gs_middle_switch
功能描述:  获取中间道岔
返回值:    
参数:      int16_t signal
参数:      int16_t index
作者  :    CY
日期  ：   2012/8/7
****************************************************/
int16_t gs_middle_switch(int16_t signal,int16_t index);

/****************************************************
函数名:    gs_middle_switch_signal
功能描述:  中间道岔关联的信号机
返回值:    
参数:      int16_t index
作者  :    CY
日期  ：   2012/8/7
****************************************************/
int16_t gs_middle_switch_signal(int16_t index);
/****************************************************
函数名:    gs_middle_switch_index
功能描述:  根据信号机获取中间道岔的配置索引号
返回值:    
参数:      int16_t signal
作者  :    CY
日期  ：   2012/8/7
****************************************************/
int16_t gs_middle_switch_index(int16_t signal);
/****************************************************
函数名:    gs_middle_section
功能描述:  获取中间道岔的区段
返回值:    
参数:      int16_t signal
参数:      int16_t index
作者  :    hejh
日期  ：   2012/12/17
****************************************************/
int16_t gs_middle_section(int16_t signal,int16_t index);
/****************************************************
函数名:    gs_allow_reverse
功能描述:  获取允许中间道岔反位的标志
返回值:    
参数:      int16_t signal
作者  :    hejh
日期  ：   2014/2/14
****************************************************/
int16_t gs_middle_allow_reverse(int16_t special_index);

/****************************************************
函数名:    gs_auto_block
功能描述:  获取自动闭塞某个区段的索引号
返回值:    
参数:      special
参数:      LQ

作者  :    hjh
日期  ：   2012/3/23
****************************************************/
node_t gs_auto_block(special_t special,index_t LQ);
void print_nodes();
/****************************************************
函数名:    gs_auto_block3
功能描述:  获取三显示自动闭塞某个区段的索引号
返回值:    
参数:      special
参数:      LQ

作者  :    hjh
日期  ：   2012/3/23
****************************************************/
node_t gs_auto_block3(special_t special,index_t LQ);

/****************************************************
函数名:    is_throat_lock
功能描述:  判断咽喉是否引总锁闭
返回值:    TRUE：引总锁闭
	       FALSE：未引总锁闭
参数:      throat

作者  :    hjh
日期  ：   2012/3/20
****************************************************/
CI_BOOL is_throat_lock(uint8_t throat);

/****************************************************
函数名:    send_command
功能描述:  发送命令
返回值:    
参数:      node_t node
参数:      uint16_t cmd_code
作者  :    CY
日期  ：   2012/3/28
****************************************************/
void send_command( node_t node, uint16_t cmd_code ) ;


/****************************************************
函数名:    gn_data
功能描述:  获取信号点数据
返回值:    
参数:      node_t node
作者  :    CY
日期  ：   2012/3/21
****************************************************/
uint16_t gn_data(node_t node_index);

/****************************************************
函数名:    gn_state
功能描述:  获取信号点状态
返回值:    
参数:      int16_t node_index
作者  :    CY
日期  ：   2012/3/28
****************************************************/
uint32_t gn_state(int16_t node_index);

/****************************************************
函数名:    sn_data
功能描述:  设置信号点数据
返回值:    
参数:      node_t node
参数:      uint32_t data
作者  :    CY
日期  ：   2012/3/21
****************************************************/
void sn_data(node_t node_index,uint32_t data);

/****************************************************
函数名:    gn_signal_history_state
功能描述:  获取信号机的历史状态
返回值:    
参数:      node_index

作者  :    hjh
日期  ：   2012/3/22
****************************************************/
EN_signal_state gn_signal_history_state(int16_t node_index);

/****************************************************
函数名:    gn_signal_node_history_state
功能描述:  获取信号机的历史状态(包括断丝历史状态)
返回值:    
参数:      int16_t node_index
作者  :    hejh
日期  ：   2012/8/10
****************************************************/
uint32_t gn_history_state(int16_t node_index);

/****************************************************
函数名:    sn_signal_history_state
功能描述:  设置信号机的历史状态
返回值:    
参数:      node_index
参数:      ss

作者  :    hjh
日期  ：   2012/3/22
****************************************************/
void sn_signal_history_state( int16_t node_index, EN_signal_state ss );
/****************************************************
函数名:    clear_section_history_state
功能描述:  清除此进路上区段的历史状态
返回值:    
参数:      route_t route_index
作者  :    hejh
日期  ：   2012/11/26
****************************************************/
void clear_section_history_state(route_t route_index);
/****************************************************
函数名:    is_guide_route
功能描述:  判断是否引导引路
返回值:    是引导进路返回TRUE
参数:      route_index

作者  :    hjh
日期  ：   2012/3/29
****************************************************/
CI_BOOL is_guide_route( route_t route_index );
/****************************************************
函数名:    all_switchs_is_normal
功能描述:  判断进路上所有道岔在定位
返回值:    TRUE表示道岔均在定位，否则FALSE
参数:      route_index

作者  :    hjh
日期  ：   2012/3/6
****************************************************/
CI_BOOL all_switchs_is_normal( route_t route_index );
/****************************************************
函数名:    gs_change_run_dir
功能描述:  获取改方运行某个区段的索引号
返回值:    
参数:      special
参数:      JG

作者  :    hjh
日期  ：   2012/4/11
****************************************************/
node_t gs_change_run_dir(special_t special,index_t JG);

/****************************************************
函数名:    sn_state
功能描述:  设置节点状态
返回值:    
参数:      node_t node_index
参数:      uint32_t status
作者  :    CY
日期  ：   2012/5/11
****************************************************/
void sn_state(node_t node_index, uint32_t status);

/****************************************************
函数名:    have_successive_route
功能描述:  是否有延续进路
返回值:    
参数:      index_t route_index
作者  :    CY
日期  ：   2012/3/22
****************************************************/
CI_BOOL have_successive_route(index_t route_index);

/****************************************************
函数名:    add_clear_section
功能描述:  设置进路中出清区段
返回值:    
参数:      node_t section_node
作者  :    CY
日期  ：   2012/5/11
****************************************************/
void set_clear_section(node_t section_node);

/****************************************************
函数名:    clear_section
功能描述:  处理出清区段
返回值:    
作者  :    CY
日期  ：   2012/5/11
****************************************************/
void clear_section();

/****************************************************
函数名:    press_button
功能描述:  设置当前按下的按钮
返回值:    
参数:      int16_t button_index
作者  :    CY
日期  ：   2012/7/16
****************************************************/
void press_button(int16_t button_index);

/****************************************************
函数名:    send_node_timer
功能描述:  发送节点计时信息
返回值:    
作者  :    CY
日期  ：   2012/7/16
****************************************************/
void send_node_timer();
/****************************************************
函数名:    send_pressed_buttons
功能描述:  发送当前按下的按钮
返回值:    
作者  :    CY
日期  ：   2012/7/19
****************************************************/
void send_pressed_buttons();

/****************************************************
函数名：   default_safe_process
功能描述： 故障—安全处理
返回值：   void
参数：     uint16_t GA
参数：     uint16_t EA
作者：	   hejh
日期：     2014/09/15
****************************************************/
void default_safe_process(uint16_t GA, uint16_t EA);

/****************************************************
函数名:    gn_inputaddress
功能描述:  获取信号节点的输入地址
返回值:    
参数:      int16_t node_index
作者  :    hejh
日期  ：   2012/10/16
****************************************************/
uint16_t gn_inputaddress(int16_t node_index);

/****************************************************
函数名:    is_route_approach_unlock
功能描述:  接近区段已解锁
返回值:    
参数:      route_t route_index
作者  :    CY
日期  ：   2012/7/23
****************************************************/
CI_BOOL is_route_approach_unlock(route_t route_index);

/****************************************************
函数名:    is_out_signal
功能描述:  是否为出站信号机
返回值:    
参数:      int16_t node_index
作者  :    CY
日期  ：   2012/7/27
****************************************************/
CI_BOOL is_out_signal(int16_t node_index);

/****************************************************
函数名:    is_out_signal
功能描述:  是否为调车信号机
返回值:    
参数:      int16_t node_index
作者  :    CY
日期  ：   2012/7/27
****************************************************/
CI_BOOL is_shunting_signal(int16_t node_index);
	
/****************************************************
函数名:    is_exceed_limit_section
功能描述:  判断联锁表中某区段是否为侵限区段
返回值:    
参数:      route_t route_index
参数:      int16_t section_index
作者  :    CY
日期  ：   2012/7/27
****************************************************/
CI_BOOL is_exceed_limit_section(route_t route_index, int16_t section_ordinal);

/****************************************************
函数名:    cn_locked_state
功能描述:  清除信号节点的锁闭标志
返回值:    
参数:      int16_t node_index
参数:      EN_lock_type state
作者  :    hejh
日期  ：   2012/7/31
****************************************************/
void cn_locked_state(int16_t node_index, EN_lock_type state);

/****************************************************
函数名:    gs_request_agree
功能描述:  获取请求同意点的状态
返回值:    
参数:      special_t special
作者  :    hejh
日期  ：   2012/9/6
****************************************************/
node_t gs_request_agree(special_t special);

/****************************************************
函数名:    gs_indication_lamp
功能描述:  获取表示灯的索引号
返回值:    
参数:      special_t special
作者  :    hejh
日期  ：   2013/1/7
****************************************************/
node_t gs_indication_lamp(special_t special);

/****************************************************
函数名:    gs_yards_liaision
功能描述:  获取场间联系的状态
返回值:    
参数:      special_t special
作者  :    hejh
日期  ：   2012/12/10
****************************************************/
node_t gs_yards_liaision(special_t special);

/****************************************************
函数名:    gs_state_collect
功能描述:  获取状态采集的状态
返回值:    
参数:      special_t special
作者  :    hejh
日期  ：   2012/12/10
****************************************************/
node_t gs_state_collect(special_t special);

/****************************************************
函数名:    gs_special_switch_index
功能描述:  获取特殊防护道岔的索引号
返回值:    
参数:      special_t special
参数:      int16_t num
作者  :    hejh
日期  ：   2013/1/28
****************************************************/
node_t gs_special_switch_index(special_t special,int16_t num);

/****************************************************
函数名:    gs_special_switch_location
功能描述:  获取特殊防护道岔的位置
返回值:    
参数:      special_t special
参数:      int16_t num
作者  :    hejh
日期  ：   2013/1/28
****************************************************/
EN_switch_state gs_special_switch_location(special_t special,int16_t num);

/****************************************************
函数名:    memory_set
功能描述:  清除内存
返回值:    
参数:      void * _dst
参数:      int _val
参数:      size_t _size
作者  :    CY
日期  ：   2012/9/5
****************************************************/
void memory_set(void * dst, int32_t val, int32_t size);

/****************************************************
函数名：   sn_state_machine
功能描述： 设置节点的状态机
返回值：   void
参数：     int16_t node_index
参数：     EN_unlock_state ss
作者：	   hejh
日期：     2013/04/17
****************************************************/
void sn_state_machine( int16_t node_index, EN_state_machine ss );

/****************************************************
函数名：   gn_state_machine
功能描述： 获取节点的状态机
返回值：   EN_unlock_state
参数：     int16_t node_index
作者：	   hejh
日期：     2013/04/17
****************************************************/
EN_state_machine gn_state_machine(int16_t node_index);

/****************************************************
函数名：   gr_last_section
功能描述： 获取进路上最后一个区段
返回值：   int16_t
参数：     route_t route_index
作者：	   hejh
日期：     2013/04/17
****************************************************/
int16_t gr_last_section(route_t route_index);

/****************************************************
函数名：   gr_delay_times
功能描述： 获取进路的初始延时时间
返回值：   CI_TIMER
参数：     route_t route_index
作者：	   hejh
日期：     2014/03/12
****************************************************/
CI_TIMER gr_delay_times(route_t route_index);

/****************************************************
函数名：   is_red_filament
功能描述： 是否检查红灯断丝
返回值：   CI_BOOL
参数：     route_t route_index
作者：	   hejh
日期：     2014/03/12
****************************************************/
CI_BOOL is_red_filament(route_t route_index);

/****************************************************
函数名：   sr_other_flag
功能描述： 设置进路的特殊标志
返回值：   void
参数：     route_t route_index
参数：     EN_route_other_flag rof
作者：	   hejh
日期：     2014/04/17
****************************************************/
void sr_other_flag( route_t route_index,EN_route_other_flag rof );

/****************************************************
函数名：   gr_other_flag
功能描述： 获取进路的特殊标志
返回值：   EN_route_other_flag
参数：     route_t route_index
作者：	   hejh
日期：     2014/04/18
****************************************************/
EN_route_other_flag gr_other_flag(route_t route_index);

/****************************************************
函数名：   clear_other_flag
功能描述： 清除进路的特殊标志
返回值：   void
参数：     route_t route_index
作者：	   hejh
日期：     2014/04/17
****************************************************/
void clear_other_flag( route_t route_index );

/****************************************************
函数名：   gr_state_machine
功能描述： 获取进路的状态机
返回值：   EN_route_state_machine
参数：     route_t route_index
作者：	   hejh
日期：     2014/04/17
****************************************************/
EN_route_state_machine gr_state_machine( route_t route_index );

/****************************************************
函数名：   sr_state_machine
功能描述： 设置进路的状态机
返回值：   void
参数：     route_t route_index
参数：     EN_route_state_machine ss
作者：	   hejh
日期：     2014/04/17
****************************************************/
void sr_state_machine( route_t route_index,EN_route_state_machine ss );

/****************************************************
函数名：   sr_fault_section
功能描述： 设置故障区段
返回值：   void
参数：     route_t route_index
作者：	   hejh
日期：     2014/04/17
****************************************************/
void sr_fault_section( route_t route_index );

/****************************************************
函数名：   gn_fault_state
功能描述： 获取区段的故障标志
返回值：   CI_BOOL
参数：     node_t node_index
作者：	   hejh
日期：     2014/04/18
****************************************************/
CI_BOOL is_section_fault(node_t node_index);

/****************************************************
函数名：   gn_guide_forword
功能描述： 获取引导进路该节点前方节点
返回值：   int16_t
参数：     EN_node_direction dir
参数：     int16_t node_index
作者：	   hejh
日期：     2014/04/21
****************************************************/
int16_t gn_guide_forword(EN_node_direction dir, int16_t node_index);

/****************************************************
函数名：   gn_guide_backword
功能描述： 获取引导进路该节点的后方节点
返回值：   int16_t
参数：     EN_node_direction dir
参数：     int16_t node_index
作者：	   hejh
日期：     2014/04/21
****************************************************/
int16_t gn_guide_backword(EN_node_direction dir, int16_t node_index);

/****************************************************
函数名：   is_unlock_sections
功能描述： 是否不解锁区段
返回值：   CI_BOOL
参数：     node_t node_index
作者：	   hejh
日期：     2014/04/24
****************************************************/
CI_BOOL is_unlock_sections(node_t node_index);

/****************************************************
函数名：   is_switchs18
功能描述： 是否18#道岔
返回值：   CI_BOOL
参数：     node_t node_index
作者：	   hejh
日期：     2014/04/25
****************************************************/
CI_BOOL is_switchs18(node_t node_index);

/****************************************************
函数名：   is_switch_location_reverse
功能描述： 是否表示相反道岔
返回值：   CI_BOOL
参数：     node_t node_index
作者：	   hejh
日期：     2014/04/25
****************************************************/
CI_BOOL is_switch_location_reverse(node_t node_index);

/****************************************************
函数名：   is_unlock_middle_switch
功能描述： 可否解锁中间道岔
返回值：   CI_BOOL
参数：     node_t state_signal
作者：	   hejh
日期：     2014/04/28
****************************************************/
CI_BOOL is_unlock_middle_switch(node_t state_signal);

/****************************************************
函数名：   delete_middle_guide_route
功能描述： 删除中间道岔处的引导进路
返回值：   void
参数：     route_t route_index
作者：	   hejh
日期：     2014/04/29
****************************************************/
void delete_middle_guide_route(route_t route_index);

/****************************************************
函数名：   is_high_speed_switch
功能描述： 是否高速道岔
返回值：   CI_BOOL
参数：     node_t node_index
作者：	   hejh
日期：     2014/05/04
****************************************************/
CI_BOOL is_high_speed_switch(node_t node_index);

/****************************************************
函数名：   gs_special_switch_unlock_section
功能描述： 获取特殊防护道岔解锁区段的索引号
返回值：   node_t
参数：     special_t special
作者：	   hejh
日期：     2014/05/04
****************************************************/
node_t gs_special_switch_unlock_section(special_t special );

/****************************************************
函数名：   gr_cycle
功能描述： 获取进路周期
返回值：   CI_TIMER
参数：     route_t route_index
作者：	   hejh
日期：     2014/05/08
****************************************************/
CI_TIMER gr_cycle(route_t route_index);

/****************************************************
函数名：   gr_time_type
功能描述： 获取进路延时类型
返回值：   EN_delay_time_type
参数：     route_t route_index
作者：	   hejh
日期：     2014/05/12
****************************************************/
EN_delay_time_type gr_time_type( route_t route_index );

/****************************************************
函数名：   is_track_power_on
功能描述： 轨道电源是否正常
返回值：   CI_BOOL
作者：	   hejh
日期：     2014/05/20
****************************************************/
CI_BOOL is_track_power_on();

/****************************************************
函数名：   is_flash_power_on
功能描述： 闪光电源是否正常
返回值：   CI_BOOL
作者：	   hejh
日期：     2014/05/20
****************************************************/
CI_BOOL is_flash_power_on();

/****************************************************
函数名：   is_block_cleared
功能描述： 检查照查区间空闲
返回值：   CI_BOOL
参数：     route_t route_index
作者：	   hejh
日期：     2014/05/21
****************************************************/
CI_BOOL is_block_cleared( route_t route_index );

/****************************************************
函数名：   sn_history_state
功能描述： 设置节点的历史状态
返回值：   void
参数：     int16_t node_index
参数：     EN_signal_state ss
作者：	   hejh
日期：     2014/06/11
****************************************************/
void sn_history_state( int16_t node_index, int32_t ss );

/****************************************************
函数名：   check_approach_added
功能描述： 判断接近延长
返回值：   CI_BOOL
参数：     route_t route_index
作者：	   hejh
日期：     2014/06/13
****************************************************/
void check_approach_added(route_t route_index);

/****************************************************
功能描述    : 将禁止信号清空，防止每次都发送该命令，
			  放在这里比较符合逻辑分层的思想。
返回值      : 
作者        : 何境泰
日期        : 2014年4月16日 14:59:20
****************************************************/
CIAPI_FUNC(int32_t) CIInter_ClearCommands(void);

/****************************************************
函数名：   gs_auto_block_section_count
功能描述： 获取自动闭塞区段的数量
返回值：   node_t
参数：     special_t special
作者：	   hejh
日期：     2015/03/13
****************************************************/
node_t gs_auto_block_section_count(special_t special);

/****************************************************
函数名：   gs_auto_block_section_count
功能描述： 获取三显示自动闭塞区段的数量
返回值：   node_t
参数：     special_t special
作者：	   hejh
日期：     2015/03/13
****************************************************/
node_t gs_auto_block3_section_count(special_t special);

/****************************************************
函数名：   gs_auto_block_section_count
功能描述： 获取改方运行区段的数量
返回值：   node_t
参数：     special_t special
作者：	   hejh
日期：     2015/03/13
****************************************************/
node_t gs_change_run_dir_section_count(special_t special);

/****************************************************
函数名：   gs_special
功能描述： &&&待删除！！！获取特殊联锁索引号
返回值：   int16_t
参数：     route_t route_index
参数：     EN_special_type type
作者：	   hejh
日期：     2015/03/13
****************************************************/
int16_t gs_special(route_t route_index, EN_special_type type);

/****************************************************
函数名：   OutputHmiNormalTips
功能描述： 输出至控显机提示信息
返回值：   void
参数：     char_t * tips
参数：     route_t route_index
作者：	   hejh
日期：     2015/05/26
****************************************************/
void OutputHmiNormalTips(char_t* tips,route_t route_index);

/****************************************************
函数名：   set_lock_button
功能描述： 设置按钮封锁或解封
返回值：   void
参数：     int16_t button_index
参数：     CI_BOOL lock_flag
作者：	   hejh
日期：     2015/08/11
****************************************************/
void set_lock_button(int16_t button_index,CI_BOOL lock_flag);

/****************************************************
函数名：   is_button_locked
功能描述： 获取按钮是否封锁
返回值：   CI_BOOL
参数：     int16_t button_index
作者：	   hejh
日期：     2015/08/11
****************************************************/
CI_BOOL is_button_locked(int16_t button_index);

/****************************************************
函数名：   init_auto_test
功能描述： 初始化测试环境
返回值：   void
作者：	   hejh
日期：     2015/04/08
****************************************************/
void init_auto_test(const char* StationName);

#endif
